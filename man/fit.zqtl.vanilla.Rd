% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{fit.zqtl.vanilla}
\alias{fit.zqtl.vanilla}
\title{Inference of zQTL regression without multivariate effect size.}
\usage{
fit.zqtl.vanilla(effect, effect.se, X, multi.C, univar.C)
}
\arguments{
\item{effect}{Marginal effect size matrix (SNP x trait)}

\item{effect.se}{Marginal effect size standard error matrix (SNP x trait)}

\item{X}{Design matrix (reference Ind x SNP)}

\item{n}{sample size of actual data (will ignore if n = 0)}

\item{multi.C}{multivariate SNP annotations (SNP x something; default: NULL)}

\item{univar.C}{univariate SNP annotations (SNP x something; default: NULL)}

\item{options}{A list of inference/optimization options.}

\item{do.hyper}{Hyper parameter tuning (default: FALSE)}

\item{do.rescale}{Rescale z-scores by standard deviation (default: FALSE)}

\item{tau}{Fixed value of tau}

\item{pi}{Fixed value of pi}

\item{tau.lb}{Lower-bound of tau (default: -10)}

\item{tau.ub}{Upper-bound of tau (default: -4)}

\item{pi.lb}{Lower-bound of pi (default: -4)}

\item{pi.ub}{Upper-bound of pi (default: -1)}

\item{tol}{Convergence criterion (default: 1e-4)}

\item{gammax}{Maximum precision (default: 1000)}

\item{rate}{Update rate (default: 1e-2)}

\item{decay}{Update rate decay (default: 0)}

\item{jitter}{SD of random jitter for mediation & factorization (default: 0.1)}

\item{nsample}{Number of stochastic samples (default: 10)}

\item{vbiter}{Number of variational Bayes iterations (default: 2000)}

\item{verbose}{Verbosity (default: TRUE)}

\item{print.interv}{Printing interval (default: 10)}

\item{nthread}{Number of threads during calculation (default: 1)}

\item{eigen.tol}{Error tolerance in Eigen decomposition (default: 0.01)}

\item{eigen.reg}{Regularization of Eigen decomposition (default: 0.0)}

\item{do.stdize}{Standardize (default: TRUE)}

\item{out.residual}{estimate residual z-scores (default: FALSE)}

\item{do.var.calc}{variance calculation (default: FALSE)}

\item{scale.var}{Scaled variance calculation (default: FALSE)}

\item{nboot}{Number of bootstraps (default: 0)}

\item{nboot.var}{Number of bootstraps for variance estimation (default: 100)}

\item{min.se}{Minimum level of SE (default: 1e-4)}

\item{rseed}{Random seed}
}
\value{
a list of variational inference results.
\itemize{
\item{conf.multi: }{ association with multivariate confounding variables}
\item{conf.uni: }{ association with univariate confounding variables}
\item{resid: }{ residuals}
\item{gwas.clean: }{ cleansed version of univariate GWAS effects}
\item{var: }{ variance decomposition results}
\item{llik: }{ log-likelihood trace over the optimization}
}
}
\description{
Inference of zQTL regression without multivariate effect size.
}
\examples{

n = 500
p = 2000
m = 1

set.seed(1)
.rnorm <- function(a, b) matrix(rnorm(a * b), a, b)
X = .rnorm(n, p)
Y = matrix(0, n, m)
h2 = 0.25
y1 = X[, 1:500] \%*\% .rnorm(500, 1) * sqrt(h2/500)
y0 = .rnorm(n, 1) * sqrt(1 - h2)
Y = y1 + y0
qtl.tab = calc.qtl.stat(X, Y)
qtl.1.tab = calc.qtl.stat(X, y1)
z.1 = matrix(qtl.1.tab$beta/qtl.1.tab$se, ncol = 1)
qtl.0.tab = calc.qtl.stat(X[sample(n), , drop = FALSE], y1)
z.0 = matrix(qtl.0.tab$beta/qtl.0.tab$se, ncol = 1)
z.out = fit.zqtl.vanilla(matrix(qtl.tab$beta, ncol=1),
                               matrix(qtl.tab$se, ncol=1),
                               X = X,
                               univar.C = cbind(z.1, z.0),
                               do.var.calc = TRUE,
                               scale.var = TRUE,
                               nboot.var = 100)

library(dplyr)
.make.df <- function(x) {
    data.frame(mean = x$mean, sd = x$sd)
}
.power10 <- function(x, component) {
    take.var.power10(x) \%>\%
        .make.df() \%>\%
        mutate(component)
}
var.tab = bind_rows(.power10(z.out$var$univar.tot, 'univar.tot'),
                    .power10(z.out$var$multivar.tot, 'multivar.tot'),
                    .power10(z.out$var$resid, 'resid'),
                    .power10(z.out$var$univar, 'univar'))
print(var.tab)


}
\author{
Yongjin Park, \email{ypp@csail.mit.edu}, \email{yongjin.peter.park@gmail.com}
}
