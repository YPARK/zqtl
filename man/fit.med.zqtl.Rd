% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{fit.med.zqtl}
\alias{fit.med.zqtl}
\title{Variational inference of zQTL mediation}
\usage{
fit.med.zqtl(effect, effect.se, effect.m, effect.m.se, X.gwas)
}
\arguments{
\item{effect}{Marginal effect size matrix (SNP x trait)}

\item{effect.se}{Marginal effect size standard error matrix (SNP x trait)}

\item{effect.m}{Marignal genetic effects of mediators (SNP x mediator)}

\item{effect.m.se}{SE of the marginal genetic effects (SNP x mediator)}

\item{n}{sample size of GWAS data (will ignore if n = 0)}

\item{n.med}{sample size of mediation data (will ignore if n.med = 0)}

\item{X.gwas}{Design matrix (reference Ind.GWAS x SNP)}

\item{X.med}{Design matrix (reference Ind.MED x SNP)}

\item{C}{SNP confounding factors (SNP x confounder; default: NULL)#'}

\item{factored}{Fit factored model (default: FALSE)#'}

\item{options}{A list of inference/optimization options.#'}

\item{multivar.mediator}{Multivariate mediator QTL effect (default: FALSE)}

\item{do.direct.estimation}{Estimate direct effect (default: TRUE)}

\item{do.propensity}{Propensity sampling to estimate direct effect (default: FALSE)}

\item{med.lodds.cutoff}{cutoff to select mediators for stratified sampling (default: log-odds > 0)}

\item{num.strat.sample}{Number of stratified sampling (default: 3)}

\item{num.strat.size}{Size of stratified sampling (default: 2)}

\item{do.hyper}{Hyper parameter tuning (default: FALSE)}

\item{do.rescale}{Rescale z-scores by standard deviation (default: FALSE)}

\item{tau}{Fixed value of tau}

\item{pi}{Fixed value of pi}

\item{tau.lb}{Lower-bound of tau (default: -10)}

\item{tau.ub}{Upper-bound of tau (default: -4)}

\item{pi.lb}{Lower-bound of pi (default: -4)}

\item{pi.ub}{Upper-bound of pi (default: -1)}

\item{tol}{Convergence criterion (default: 1e-4)}

\item{gammax}{Maximum precision (default: 1000)}

\item{rate}{Update rate (default: 1e-2)}

\item{decay}{Update rate decay (default: 0)}

\item{jitter}{SD of random jitter for mediation & factorization (default: 0.01)}

\item{nsample}{Number of stochastic samples (default: 10)}

\item{vbiter}{Number of variational Bayes iterations (default: 2000)}

\item{verbose}{Verbosity (default: TRUE)}

\item{k}{Rank of the factored model (default: 1)}

\item{svd.init}{initialize by SVD (default: TRUE)}

\item{print.interv}{Printing interval (default: 10)}

\item{nthread}{Number of threads during calculation (default: 1)}

\item{eigen.tol}{Error tolerance in Eigen decomposition (default: 0.01)}

\item{do.stdize}{Standardize (default: TRUE)}

\item{min.se}{Minimum level of SE (default: 1e-4)}

\item{rseed}{Random seed}
}
\value{
a list of variational inference results
}
\description{
Variational inference of zQTL mediation
}
\details{
Mediation analysis
}
\examples{

library(zqtl)
n <- 1000
p <- 2000
n.genes <- 10
h2 <- 0.9
n.causal.direct <- 4
n.causal.qtl <- 3
n.causal.gene <- 2

set.seed(1)

.rnorm <- function(a, b) matrix(rnorm(a * b), a, b)

X.raw <- sapply(1:p, function(j) {
    f <- runif(1, min = 0.1, max = 0.9)
    rbinom(n, 2, f)
})

X <- scale(X.raw)

c.qtls <- matrix(sapply(1:n.genes, function(j) matrix(sample(p, n.causal.qtl))), nrow = n.causal.qtl)

theta.snp.gene <- .rnorm(n.causal.qtl, n.genes) / n.causal.qtl

gene.expr <- lapply(1:dim(c.qtls)[2], function(j) X[, c.qtls[,j], drop = FALSE] \\\%*\\\% theta.snp.gene[, j, drop = FALSE] + 0.5 * rnorm(n) )

gene.expr <- do.call(cbind, gene.expr)

theta.med <- sample(c(-1,1), n.causal.gene, TRUE)

causal.direct <- sample(p, n.causal.direct)
theta.dir <- matrix(rnorm(n.causal.direct), n.causal.direct, 1) / n.causal.direct

y <- gene.expr[,1:n.causal.gene,drop = FALSE] \\\%*\\\% theta.med # mediation
y <- y + X[, causal.direct, drop = FALSE] \\\%*\\\% theta.dir # direct

y <- y + rnorm(n) * c(sqrt(var(y) * (1/h2 - 1)))

################################################################
fast.cov <- function(x, y) {
    n.obs <- crossprod(!is.na(x), !is.na(y))
    ret <- crossprod(replace(x, is.na(x), 0),
                     replace(y, is.na(y), 0)) / n.obs
    return(ret)
}

fast.z.cov <- function(x, y) {
    n.obs <- crossprod(!is.na(x), !is.na(y))
    ret <- crossprod(replace(x, is.na(x), 0),
                     replace(y, is.na(y), 0)) / sqrt(n.obs)
    return(ret)
}

xy.beta <- fast.cov(X, y)
z.xy <- fast.z.cov(X, y)

xy.beta.se <- xy.beta / z.xy

.idx <- sample(n, 300)
X.med <- X[.idx, ] ## smaller sample in mediation QTL

xg.beta <- fast.cov(X.med, gene.expr[.idx, ])
z.xg <- fast.z.cov(X.med, gene.expr[.idx, ])
xg.beta.se <- xg.beta / z.xg

################################################################
vb.opt <- list(nsample = 10, vbiter = 3000, rate = 1e-2,
               gammax = 1e2, jitter = 0.1, do.stdize = TRUE, pi = -0, tau = -4,
               do.hyper = FALSE, eigen.tol = 1e-2, tol = 1e-8,
               verbose = TRUE, min.se = 1e-4,
               print.interv = 200, do.rescale = FALSE)

med.out <- fit.med.zqtl(effect = xy.beta,
                        effect.se = xy.beta.se,
                        effect.m = xg.beta * 10,
                        effect.m.se = xg.beta.se,
                        X.gwas = X,
                        X.med = X.med,
                        options = vb.opt)

plot(med.out$param.mediated$lodds, ylab = 'lodds', main = 'mediation')#'

################################################################
## Use multivariate effects directly
vb.opt <- list(nsample = 10, vbiter = 3000, rate = 1e-2,
               gammax = 1e4, do.stdize = TRUE,
               pi = -0, tau = -4,
               do.hyper = FALSE, eigen.tol = 1e-2, tol = 1e-8,
               verbose = TRUE, min.se = 1e-4,
               print.interv = 200,
               multivar.mediator = TRUE)

eqtl.true <- matrix(nrow = p, ncol = n.genes)
eqtl.se.true <- matrix(1, nrow = p, ncol = n.genes)

for(j in 1:n.genes) {
    eqtl.true[c.qtls[,j], j] <- theta.snp.gene[,j]
}

med.out <- fit.med.zqtl(effect = xy.beta,
                        effect.se = xy.beta.se,
                        effect.m = eqtl.true,
                        effect.m.se = eqtl.se.true,
                        X.gwas = X,
                        options = vb.opt)

plot(med.out$param.mediated$lodds, ylab = 'lodds', main = 'mediation')

################################################################
vb.opt <- list(nsample = 10, vbiter = 3000, rate = 1e-2,
               gammax = 1e4, do.stdize = TRUE,
               pi = -0, tau = -4, do.propensity = TRUE,
               do.hyper = FALSE, eigen.tol = 1e-2, tol = 1e-8,
               verbose = TRUE, min.se = 1e-4,
               print.interv = 200,
               multivar.mediator = TRUE)

eqtl.true <- matrix(nrow = p, ncol = n.genes)
eqtl.se.true <- matrix(1, nrow = p, ncol = n.genes)

for(j in 1:n.genes) {
    eqtl.true[c.qtls[,j], j] <- theta.snp.gene[,j]
}

med.out <- fit.med.zqtl(effect = xy.beta,
                        effect.se = xy.beta.se,
                        effect.m = eqtl.true,
                        effect.m.se = eqtl.se.true,
                        X.gwas = X,
                        options = vb.opt)

plot(med.out$param.mediated$lodds, ylab = 'lodds', main = 'mediation')


}
\author{
Yongjin Park, \email{ypp@csail.mit.edu}, \email{yongjin.peter.park@gmail.com}
}
